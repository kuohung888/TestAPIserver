//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:4.0.30319.42000
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 原始程式碼已由 Microsoft.VSDesigner 自動產生，版本 4.0.30319.42000。
// 
#pragma warning disable 1591

namespace highlight_system.FA_AOI {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="AOIServiceSoap", Namespace="http://tempuri.org/")]
    public partial class AOIService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback AOITransferTRDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMESScheduleInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMESStripQtyByStepOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMESAOITrackoutDataOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public AOIService() {
            this.Url = global::highlight_system.Properties.Settings.Default.highlight_system_FA_AOI_AOIService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event AOITransferTRDCompletedEventHandler AOITransferTRDCompleted;
        
        /// <remarks/>
        public event GetMESScheduleInfoCompletedEventHandler GetMESScheduleInfoCompleted;
        
        /// <remarks/>
        public event GetMESStripQtyByStepCompletedEventHandler GetMESStripQtyByStepCompleted;
        
        /// <remarks/>
        public event GetMESAOITrackoutDataCompletedEventHandler GetMESAOITrackoutDataCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AOITransferTRD", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AOITransferTRD(string lv_strLotInfo, ref string r_strRtnMsg) {
            object[] results = this.Invoke("AOITransferTRD", new object[] {
                        lv_strLotInfo,
                        r_strRtnMsg});
            r_strRtnMsg = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AOITransferTRDAsync(string lv_strLotInfo, string r_strRtnMsg) {
            this.AOITransferTRDAsync(lv_strLotInfo, r_strRtnMsg, null);
        }
        
        /// <remarks/>
        public void AOITransferTRDAsync(string lv_strLotInfo, string r_strRtnMsg, object userState) {
            if ((this.AOITransferTRDOperationCompleted == null)) {
                this.AOITransferTRDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAOITransferTRDOperationCompleted);
            }
            this.InvokeAsync("AOITransferTRD", new object[] {
                        lv_strLotInfo,
                        r_strRtnMsg}, this.AOITransferTRDOperationCompleted, userState);
        }
        
        private void OnAOITransferTRDOperationCompleted(object arg) {
            if ((this.AOITransferTRDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AOITransferTRDCompleted(this, new AOITransferTRDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMESScheduleInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetMESScheduleInfo(string i_strJsonLotInfo, ref string r_strMESLotInfo, ref string r_strRtnMsg) {
            object[] results = this.Invoke("GetMESScheduleInfo", new object[] {
                        i_strJsonLotInfo,
                        r_strMESLotInfo,
                        r_strRtnMsg});
            r_strMESLotInfo = ((string)(results[1]));
            r_strRtnMsg = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetMESScheduleInfoAsync(string i_strJsonLotInfo, string r_strMESLotInfo, string r_strRtnMsg) {
            this.GetMESScheduleInfoAsync(i_strJsonLotInfo, r_strMESLotInfo, r_strRtnMsg, null);
        }
        
        /// <remarks/>
        public void GetMESScheduleInfoAsync(string i_strJsonLotInfo, string r_strMESLotInfo, string r_strRtnMsg, object userState) {
            if ((this.GetMESScheduleInfoOperationCompleted == null)) {
                this.GetMESScheduleInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMESScheduleInfoOperationCompleted);
            }
            this.InvokeAsync("GetMESScheduleInfo", new object[] {
                        i_strJsonLotInfo,
                        r_strMESLotInfo,
                        r_strRtnMsg}, this.GetMESScheduleInfoOperationCompleted, userState);
        }
        
        private void OnGetMESScheduleInfoOperationCompleted(object arg) {
            if ((this.GetMESScheduleInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMESScheduleInfoCompleted(this, new GetMESScheduleInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMESStripQtyByStep", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetMESStripQtyByStep(string i_strJsonLotInfo, ref string r_strMESStripQtyByStep, ref string r_strRtnMsg) {
            object[] results = this.Invoke("GetMESStripQtyByStep", new object[] {
                        i_strJsonLotInfo,
                        r_strMESStripQtyByStep,
                        r_strRtnMsg});
            r_strMESStripQtyByStep = ((string)(results[1]));
            r_strRtnMsg = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetMESStripQtyByStepAsync(string i_strJsonLotInfo, string r_strMESStripQtyByStep, string r_strRtnMsg) {
            this.GetMESStripQtyByStepAsync(i_strJsonLotInfo, r_strMESStripQtyByStep, r_strRtnMsg, null);
        }
        
        /// <remarks/>
        public void GetMESStripQtyByStepAsync(string i_strJsonLotInfo, string r_strMESStripQtyByStep, string r_strRtnMsg, object userState) {
            if ((this.GetMESStripQtyByStepOperationCompleted == null)) {
                this.GetMESStripQtyByStepOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMESStripQtyByStepOperationCompleted);
            }
            this.InvokeAsync("GetMESStripQtyByStep", new object[] {
                        i_strJsonLotInfo,
                        r_strMESStripQtyByStep,
                        r_strRtnMsg}, this.GetMESStripQtyByStepOperationCompleted, userState);
        }
        
        private void OnGetMESStripQtyByStepOperationCompleted(object arg) {
            if ((this.GetMESStripQtyByStepCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMESStripQtyByStepCompleted(this, new GetMESStripQtyByStepCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMESAOITrackoutData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetMESAOITrackoutData(string i_strSchedule, string i_strStepId, ref string r_strMESAOITrackoutData, ref string r_strRtnMsg) {
            object[] results = this.Invoke("GetMESAOITrackoutData", new object[] {
                        i_strSchedule,
                        i_strStepId,
                        r_strMESAOITrackoutData,
                        r_strRtnMsg});
            r_strMESAOITrackoutData = ((string)(results[1]));
            r_strRtnMsg = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetMESAOITrackoutDataAsync(string i_strSchedule, string i_strStepId, string r_strMESAOITrackoutData, string r_strRtnMsg) {
            this.GetMESAOITrackoutDataAsync(i_strSchedule, i_strStepId, r_strMESAOITrackoutData, r_strRtnMsg, null);
        }
        
        /// <remarks/>
        public void GetMESAOITrackoutDataAsync(string i_strSchedule, string i_strStepId, string r_strMESAOITrackoutData, string r_strRtnMsg, object userState) {
            if ((this.GetMESAOITrackoutDataOperationCompleted == null)) {
                this.GetMESAOITrackoutDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMESAOITrackoutDataOperationCompleted);
            }
            this.InvokeAsync("GetMESAOITrackoutData", new object[] {
                        i_strSchedule,
                        i_strStepId,
                        r_strMESAOITrackoutData,
                        r_strRtnMsg}, this.GetMESAOITrackoutDataOperationCompleted, userState);
        }
        
        private void OnGetMESAOITrackoutDataOperationCompleted(object arg) {
            if ((this.GetMESAOITrackoutDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMESAOITrackoutDataCompleted(this, new GetMESAOITrackoutDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void AOITransferTRDCompletedEventHandler(object sender, AOITransferTRDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AOITransferTRDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AOITransferTRDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string r_strRtnMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetMESScheduleInfoCompletedEventHandler(object sender, GetMESScheduleInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMESScheduleInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMESScheduleInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string r_strMESLotInfo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string r_strRtnMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetMESStripQtyByStepCompletedEventHandler(object sender, GetMESStripQtyByStepCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMESStripQtyByStepCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMESStripQtyByStepCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string r_strMESStripQtyByStep {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string r_strRtnMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetMESAOITrackoutDataCompletedEventHandler(object sender, GetMESAOITrackoutDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMESAOITrackoutDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMESAOITrackoutDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string r_strMESAOITrackoutData {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string r_strRtnMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
}

#pragma warning restore 1591