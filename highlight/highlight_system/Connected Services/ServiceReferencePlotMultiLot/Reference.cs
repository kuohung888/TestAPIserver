//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:4.0.30319.42000
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace highlight_system.ServiceReferencePlotMultiLot {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ArrayOfString", Namespace="http://tempuri.org/", ItemName="string")]
    [System.SerializableAttribute()]
    public class ArrayOfString : System.Collections.Generic.List<string> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferencePlotMultiLot.MultipleStackMapSoap")]
    public interface MultipleStackMapSoap {
        
        // CODEGEN: 命名空間 http://tempuri.org/ 的元素名稱  ip 未標示為 nillable，正在產生訊息合約
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/plot_multi_lot_stack_map", ReplyAction="*")]
        highlight_system.ServiceReferencePlotMultiLot.plot_multi_lot_stack_mapResponse plot_multi_lot_stack_map(highlight_system.ServiceReferencePlotMultiLot.plot_multi_lot_stack_mapRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/plot_multi_lot_stack_map", ReplyAction="*")]
        System.Threading.Tasks.Task<highlight_system.ServiceReferencePlotMultiLot.plot_multi_lot_stack_mapResponse> plot_multi_lot_stack_mapAsync(highlight_system.ServiceReferencePlotMultiLot.plot_multi_lot_stack_mapRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class plot_multi_lot_stack_mapRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="plot_multi_lot_stack_map", Namespace="http://tempuri.org/", Order=0)]
        public highlight_system.ServiceReferencePlotMultiLot.plot_multi_lot_stack_mapRequestBody Body;
        
        public plot_multi_lot_stack_mapRequest() {
        }
        
        public plot_multi_lot_stack_mapRequest(highlight_system.ServiceReferencePlotMultiLot.plot_multi_lot_stack_mapRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class plot_multi_lot_stack_mapRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string ip;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string site;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string defect_code_name;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string lot_list;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string path;
        
        public plot_multi_lot_stack_mapRequestBody() {
        }
        
        public plot_multi_lot_stack_mapRequestBody(string ip, string site, string defect_code_name, string lot_list, string path) {
            this.ip = ip;
            this.site = site;
            this.defect_code_name = defect_code_name;
            this.lot_list = lot_list;
            this.path = path;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class plot_multi_lot_stack_mapResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="plot_multi_lot_stack_mapResponse", Namespace="http://tempuri.org/", Order=0)]
        public highlight_system.ServiceReferencePlotMultiLot.plot_multi_lot_stack_mapResponseBody Body;
        
        public plot_multi_lot_stack_mapResponse() {
        }
        
        public plot_multi_lot_stack_mapResponse(highlight_system.ServiceReferencePlotMultiLot.plot_multi_lot_stack_mapResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class plot_multi_lot_stack_mapResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public highlight_system.ServiceReferencePlotMultiLot.ArrayOfString plot_multi_lot_stack_mapResult;
        
        public plot_multi_lot_stack_mapResponseBody() {
        }
        
        public plot_multi_lot_stack_mapResponseBody(highlight_system.ServiceReferencePlotMultiLot.ArrayOfString plot_multi_lot_stack_mapResult) {
            this.plot_multi_lot_stack_mapResult = plot_multi_lot_stack_mapResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface MultipleStackMapSoapChannel : highlight_system.ServiceReferencePlotMultiLot.MultipleStackMapSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MultipleStackMapSoapClient : System.ServiceModel.ClientBase<highlight_system.ServiceReferencePlotMultiLot.MultipleStackMapSoap>, highlight_system.ServiceReferencePlotMultiLot.MultipleStackMapSoap {
        
        public MultipleStackMapSoapClient() {
        }
        
        public MultipleStackMapSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MultipleStackMapSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MultipleStackMapSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MultipleStackMapSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        highlight_system.ServiceReferencePlotMultiLot.plot_multi_lot_stack_mapResponse highlight_system.ServiceReferencePlotMultiLot.MultipleStackMapSoap.plot_multi_lot_stack_map(highlight_system.ServiceReferencePlotMultiLot.plot_multi_lot_stack_mapRequest request) {
            return base.Channel.plot_multi_lot_stack_map(request);
        }
        
        public highlight_system.ServiceReferencePlotMultiLot.ArrayOfString plot_multi_lot_stack_map(string ip, string site, string defect_code_name, string lot_list, string path) {
            highlight_system.ServiceReferencePlotMultiLot.plot_multi_lot_stack_mapRequest inValue = new highlight_system.ServiceReferencePlotMultiLot.plot_multi_lot_stack_mapRequest();
            inValue.Body = new highlight_system.ServiceReferencePlotMultiLot.plot_multi_lot_stack_mapRequestBody();
            inValue.Body.ip = ip;
            inValue.Body.site = site;
            inValue.Body.defect_code_name = defect_code_name;
            inValue.Body.lot_list = lot_list;
            inValue.Body.path = path;
            highlight_system.ServiceReferencePlotMultiLot.plot_multi_lot_stack_mapResponse retVal = ((highlight_system.ServiceReferencePlotMultiLot.MultipleStackMapSoap)(this)).plot_multi_lot_stack_map(inValue);
            return retVal.Body.plot_multi_lot_stack_mapResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<highlight_system.ServiceReferencePlotMultiLot.plot_multi_lot_stack_mapResponse> highlight_system.ServiceReferencePlotMultiLot.MultipleStackMapSoap.plot_multi_lot_stack_mapAsync(highlight_system.ServiceReferencePlotMultiLot.plot_multi_lot_stack_mapRequest request) {
            return base.Channel.plot_multi_lot_stack_mapAsync(request);
        }
        
        public System.Threading.Tasks.Task<highlight_system.ServiceReferencePlotMultiLot.plot_multi_lot_stack_mapResponse> plot_multi_lot_stack_mapAsync(string ip, string site, string defect_code_name, string lot_list, string path) {
            highlight_system.ServiceReferencePlotMultiLot.plot_multi_lot_stack_mapRequest inValue = new highlight_system.ServiceReferencePlotMultiLot.plot_multi_lot_stack_mapRequest();
            inValue.Body = new highlight_system.ServiceReferencePlotMultiLot.plot_multi_lot_stack_mapRequestBody();
            inValue.Body.ip = ip;
            inValue.Body.site = site;
            inValue.Body.defect_code_name = defect_code_name;
            inValue.Body.lot_list = lot_list;
            inValue.Body.path = path;
            return ((highlight_system.ServiceReferencePlotMultiLot.MultipleStackMapSoap)(this)).plot_multi_lot_stack_mapAsync(inValue);
        }
    }
}
