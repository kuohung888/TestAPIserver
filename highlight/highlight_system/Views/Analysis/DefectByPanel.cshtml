@using System.Data
@model DataTable

@{
    ViewBag.Title = "統計Defect Code Fail by 片";

    DataTable dt = ViewData.Model;

    int[] panel_no = dt.AsEnumerable().Select(r => r.Field<int>("panel_no")).ToArray();
    int[] defect_fail_ppm = dt.AsEnumerable().Select(r => r.Field<int>("defect_fail_ppm")).ToArray();

    var defect_max = Json.Encode("");
    if (defect_fail_ppm.Count() > 0)
    {
        defect_max = Json.Encode(defect_fail_ppm.Max());
    }

    var jsonPanelNo = Json.Encode(panel_no);//將Controller傳來轉型成json
    var jsonFailppm = Json.Encode(defect_fail_ppm);//將透過Model讀取的資料轉成json
}

<!-- Page Heading -->
<h1 class="h3 mb-2 text-gray-800">@ViewBag.Title</h1>
<p class="mb-4">
    @*1. 統計分析 by 片*@
</p>


<div class="card shadow mb-4 p-3">

    <form method="post" name="input_form">
        <div class="row">
            <!-- 選擇站別 -->
            <div class="col-3 input-group">
                <label class="mt-2 mr-1" for="input_site">站別</label>
                <select name="input_site" class="form-control rounded-0 input-group-append" id="input_site" onchange="siteChange(this)">
                    @if (ViewBag.Site == "TST")
                    {
                        <option>AOI</option>
                        <option>AVI</option>
                        <option selected>TST</option>
                    }
                    else if (ViewBag.Site == "AVI")
                    {
                        <option>AOI</option>
                        <option selected>AVI</option>
                        <option>TST</option>
                    }
                    else
                    {
                        <option selected>AOI</option>
                        <option>AVI</option>
                        <option>TST</option>
                    }
                </select>
            </div>

            <!-- 選擇批號 -->
            <div class="col-3 input-group">
                <label class="mt-2 mr-1">批號</label>
                <input type="text" name="input_lot" id="input_lot" class="form-control input-group-append  " placeholder="批號..." value="@ViewBag.Lot">
            </div>

            <!-- 選擇Defect code -->
            <div class="col-3 input-group">
                <label class="mt-2 mr-1">缺點名稱</label>
                <select name="input_defect_code" class="form-control rounded-0 input-group-append " id="input_defect_code">
                    @foreach (String code in ViewBag.defectCodeList)
                    {
                        if (ViewBag.SelectedDefect == code)
                        {
                            <option selected>@code</option>
                        }
                        else
                        {
                            <option>@code</option>
                        }
                    }
                </select>

            </div>

            <!-- 執行統計按鈕 -->
            <div class="col-3 input-group">
                <button class="btn btn-secondary" type="submit" value="btn_statistic" name="press_item" onclick="onStatistic(this)">
                    <i class="fas fa-chart-bar fa-sm"></i>
                    <span class="text">統計</span>
                </button>
            </div>

        </div>
    </form>
</div>


<div class="row justify-content-between">

    <div class="col-9">
        <!-- Bar Chart -->
        <div class=" card shadow">

            <div class="card-header py-2">
                <div class="row align-items-center">

                    <div class="col-auto">
                        <h5 class="m-0 font-weight-bold text-primary">各片PPM統計圖</h5>
                    </div>

                    <div class="col-auto">
                        <button class="btn btn-info" onclick="resetZoom()">Reset Zoom</button>
                    </div>

                    <!-- <div class="col-auto">
                        <label for="colorPicker" id="lbl_color">Chart color</label>
                        <input type="color" id="colorPicker" name="colorPicker" value="#e66465" onclick="changeColor()">
                    </div>-->

                </div>
            </div>

            <!-- 繪製圖表區塊 -->
            <div class="card-body">

                <!-- <div class="col-3 input-group">
                    <label id="lbl_upper" class="mt-2 mr-1">圖表上限</label>
                    <input type="number" class="form-control  input-group-append" id="input_chart_upper" value="@defect_max" onchange="upperChange()" />
                </div>-->

                <div class="chart-bar" style="width:100%;height:600px">
                    <canvas id="myBarChart"></canvas>
                </div>
            </div>

        </div>

    </div>


    <div class="col-3">
        <!-- 統計表格與跳轉單片 -->
        <div class="card shadow ">
            @using (Html.BeginForm("SinglePanelDrawing", "Analysis", FormMethod.Post, new { name = "singleppmForm", id = "singleppmForm", target = "_blank" }))
            {
                @Html.Hidden("input_site")
                @Html.Hidden("input_lot")
                @Html.Hidden("input_defect_code")
                @Html.Hidden("panel_list", new { id = "panel_list" })

                <div class="card-header py-2">
                    <div class="row align-items-center">

                        <div class="col mr-auto">
                            <h5 class="m-0 font-weight-bold text-primary">統計表</h5>
                        </div>

                        <div class="col-auto">
                            <button id="btn_drawingSinglePPM" class="btn btn-success " type="submit" value="btn_drawingSinglePPM" name="press_item">
                                <span class="text">單片畫圖</span>
                            </button>
                        </div>

                        <div class="col-auto">
                            <button id="download_btn" class="btn btn-info " type="button" onclick="exportExcel(this);">
                                <span class="text">下載報表</span>
                            </button>
                        </div>

                    </div>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-bordered table-hover display select" id="datatable_single_ppm" style="width:100%" cellspacing="0">
                            <thead>
                                <tr>
                                    <th><input name="select_all" value="1" type="checkbox"></th>
                                    <th>板號</th>
                                    <th>顆數</th>
                                    <th>PPM</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (DataRow dr in ViewData.Model.Rows)
                                {
                                    <tr>
                                        <td></td>
                                        <td>@dr["panel_no"]</td>
                                        <td>@dr["defect_fail_count"]</td>
                                        <td>@dr["defect_fail_ppm"]</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            }
        </div>

    </div>
</div>

<!-- 網頁提示訊息 -->
@if (ViewBag.Msg != null && ViewBag.Msg != "")
{
    <script type="text/javascript">
        var message = @Html.Raw(Json.Encode(ViewBag.Msg));
        alert(message);
    </script>

}


@Scripts.Render("~/vendor/chart.js/Chart.min.js")
@Scripts.Render("~/vendor/chart.js/chartjs-plugin-zoom.min.js")
@Scripts.Render("~/js/demo/datatables-multicheck_panelppm.js")
@*@Scripts.Render("~/js/demo/chart-defect-analysis.js")*@


<script type="text/javascript">
    setTimeout(function () { start_datatable_multi_check() }, 500);

    function exportExcel(e) {
        //var sHtml = htmlEncode($("#datatable_single_ppm")[0].outerHTML);//做html編碼

        //$("input[name='hHtml']").val(sHtml);
        $("input[name='input_site']").val($("#input_site").val());
        $("input[name='input_lot']").val($("#input_lot").val());
        $("input[name='input_defect_code']").val($("#input_defect_code").val());
        //表單提交
        $("form[name='ppmDownloadForm']").submit();
    }


    function siteChange(e) {
        $("form[name='input_form']").submit();
    }

    function onStatistic(e) {
        //畫面執行中circle
        $('.spinner').css('display', 'block');
    }



    // 繪製圖表
    var ctx = document.getElementById("myBarChart");
    var barColor = "rgba(54, 162, 235, 0.5)";
    var chartLabel = @Html.Raw(jsonPanelNo);
    var chartData = @Html.Raw(jsonFailppm);
    var defectMax = @Html.Raw(defect_max);

    var myBarChart = new Chart(ctx, {
        type: 'bar',
        data: {
            labels: chartLabel,
            datasets: [{
                label: "ppm",
                //backgroundColor: "#4e73df",
                //圖表背景色
                backgroundColor: barColor,
                hoverBackgroundColor: "#2e59d9",
                borderColor: "#4e73df",
                data: chartData,
            }],
        },
        options: {
            plugins: {
                zoom: {
                    limits: {
                        y: { min: 0, max: 1000000 },
                    },
                    zoom: {
                        wheel: {
                            enabled: true,
                        },
                        pinch: {
                            enabled: true
                        },
                        mode: 'y',
                    }
                },
                legend: {
                    display: false
                },
                tooltip: {
                    titleMarginBottom: 10,
                    titleColor: '#6e707e',
                    //titleFontSize: 14,
                    backgroundColor: "rgb(255,255,255)",
                    bodyColor: "#858796",
                    borderColor: '#dddfeb',
                    borderWidth: 1,
                    //xPadding: 15,
                    //yPadding: 15,
                    displayColors: false,
                    caretPadding: 10,
                    callbacks: {
                        label: function (context) {
                            let label = context.dataset.label || '';
                            if (label) {
                                label += ': ';
                            }
                            if (context.parsed.y !== null) {
                                label += context.parsed.y;
                            }
                            return label;
                        }

                    }
                }
            },
            maintainAspectRatio: false,
            layout: {
                padding: {
                    left: 10,
                    right: 10,
                    top: 10,
                    bottom: 0
                }
            },
            scales: {
                x: {
                    gridLines: {
                        display: false,
                        drawBorder: false
                    }
                    //// x軸顯示幾個值
                    //ticks: {
                    //    maxTicksLimit: 6
                    //},
                    //maxBarThickness: 25,
                },
                y: {
                    ticks: {
                        min: 0,
                        max: defectMax,
                        //maxTicksLimit: 10,
                        padding: 0,
                        callback: function (value, index, values) {
                            return value;
                        }
                    },
                    gridLines: {
                        color: "rgb(234, 236, 244)",
                        zeroLineColor: "rgb(234, 236, 244)",
                        drawBorder: false,
                        borderDash: [2],
                        zeroLineBorderDash: [2]
                    }
                },
            },


        }
    });


    //function hexTorgb(hex) {
    //    return ['0x' + hex[1] + hex[2] | 0, '0x' + hex[3] + hex[4] | 0, '0x' + hex[5] + hex[6] | 0];
    //}

    function resetZoom() {
        myBarChart.resetZoom();
    }

    //function changeColor() {
    //    barColor = document.getElementById("colorPicker").value;
    //    myBarChart.resetZoom();
    //}



</script>



<!-- ppm與顆樹表格下載 -->
@using (Html.BeginForm("PanelPPM_ExportExcel", "Analysis", FormMethod.Post, new { name = "ppmDownloadForm" }))
{
    @Html.Hidden("hHtml")
    @Html.Hidden("input_site")
    @Html.Hidden("input_lot")
    @Html.Hidden("input_defect_code")
}
