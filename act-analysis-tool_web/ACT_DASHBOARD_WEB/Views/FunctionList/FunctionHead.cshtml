@{
    // 設定頁面標題
    ViewBag.Title = "Function";

    // 設定預設日期範圍 - 從六天前到明天的零時零分零秒
    DateTime start_time = DateTime.Now.Date.AddDays(-6);      // 六天前的日期（00:00:00）
    DateTime end_time = DateTime.Now.Date.AddDays(1).AddSeconds(-1); // 明天日期的最後一秒（23:59:59）

    // 將日期格式化為字串傳遞給視圖
    ViewBag.StartDate = start_time.ToString("yyyy-MM-dd HH:mm:ss");
    ViewBag.EndDate = end_time.ToString("yyyy-MM-dd HH:mm:ss");
}

<!-- 頁面樣式 -->
<style>
    /* 下拉選單樣式 - 限制高度並啟用垂直滾動 */
    .multiselect-container {
        max-height: 200px;
        overflow-y: auto;
    }

    /* 固定頂部導航條樣式 */
    .fixed-header {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        background-color: lightgray;
        border-bottom: 1px solid #ddd;
        padding: 10px;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        z-index: 10; /* 確保懸浮在其他元素之上 */
    }

    /* 載入中指示器樣式 */
    .spinner {
        margin-top: 50px;
        display: none; /* 預設隱藏 */
    }

        /* 載入中指示器顯示時的樣式 */
        .spinner.active {
            display: block;
        }
</style>

<!-- 篩選條件區塊 -->
<div class="card shadow mb-3 p-3 pl-5 fixed-header" style="margin-top:55px">
    <form name="search_form" method="post">
        <!-- 第一行：功能選擇與日期範圍 -->
        <div class="row mr-2">
            <!-- 功能選擇下拉選單 -->
            <div class="col-3 mb-1">
                <div class="input-group">
                    <div class="input-group-prepend"><span class="input-group-text">Function</span></div>
                    <select id="select_Function" name="select_Function" class="form-control" onchange="onChangeFunction()">
                        <option value="hw_bin_list">Bin code list - HW bin list</option>
                        <option value="histogram">Histogram - Combine</option>
                    </select>
                </div>
            </div>
            <!-- 開始日期選擇器 -->
            <div class="col-3 mb-1">
                <div class="input-group">
                    <div class="input-group-prepend"><span class="input-group-text">Start Date</span></div>
                    <input id="input_StartDate" name="input_StartDate" type="datetime-local"
                           class="form-control bg-light border-1 small"
                           value="@ViewBag.StartDate" onchange="onChangeDate()">
                </div>
            </div>
            <!-- 結束日期選擇器 -->
            <div class="col-3 mb-1">
                <div class="input-group">
                    <div class="input-group-prepend"><span class="input-group-text">End Date</span></div>
                    <input id="input_EndDate" name="input_EndDate" type="datetime-local"
                           class="form-control bg-light border-1 small"
                           value="@ViewBag.EndDate" onchange="onChangeDate()">
                </div>
            </div>
        </div>

        <!-- 第二行：BD、Tester、Lot ID、Wafer ID選項 -->
        <div class="row mr-2">
            <!-- BD選擇器 -->
            <div class="col-3 mb-1">
                <div class="input-group">
                    <div class="input-group-prepend"><span class="input-group-text">BD</span></div>
                    <select id="select_BD" name="select_BD" class="form-control"></select>
                </div>
            </div>
            <!-- 測試機選擇器 -->
            <div class="col-3 mb-1">
                <div class="input-group">
                    <div class="input-group-prepend"><span class="input-group-text">Tester</span></div>
                    <select multiple id="select_Tester" name="select_Tester" class="form-control"></select>
                </div>
            </div>
            <!-- 批次ID選擇器 -->
            <div class="col-3 mb-1">
                <div class="input-group">
                    <div class="input-group-prepend"><span class="input-group-text">Lot ID</span></div>
                    <select multiple id="select_Lot" name="select_Lot" class="form-control"></select>
                </div>
            </div>
            <!-- 晶圓ID選擇器 (預設禁用) -->
            <div class="col-3 mb-1">
                <div class="input-group">
                    <div class="input-group-prepend"><span class="input-group-text">Wafer ID</span></div>
                    <select multiple id="select_Wafer" name="select_Wafer" class="form-control"
                            onchange="onChangeWaferId()" disabled></select>
                </div>
            </div>
        </div>

        <!-- 第三行：測試模式、測試項目、批次檔案匯入、啟動按鈕 -->
        <div class="row mr-2">
            <!-- 測試模式選擇器 -->
            <div class="col-3 mb-1">
                <div class="input-group">
                    <div class="input-group-prepend"><span class="input-group-text">Test Mode</span></div>
                    <select multiple id="select_Test_mode" name="select_Test_mode" class="form-control"
                            onchange="onChangeTestMode()"></select>
                </div>
            </div>
            <!-- 測試項目選擇器 -->
            <div class="col-3 mb-1">
                <div id="select_Test_item_div" class="input-group">
                    <div class="input-group-prepend"><span class="input-group-text">Test Item</span></div>
                    <select id="select_Test_item" name="select_Test_item" class="form-control"></select>
                </div>
            </div>
            <!-- Site選擇器 (預設隱藏) -->
            <div class="col-3 mb-1" style="display:none">
                <div class="input-group">
                    <div class="input-group-prepend"><span class="input-group-text">Site</span></div>
                    <select multiple id="select_Site" name="select_Site" class="form-control"></select>
                </div>
            </div>
            <!-- 批次檔案匯入按鈕 -->
            <div class="col-3 input-group mt-1">
                <button class="btn btn-outline-secondary w-50" type="button" data-toggle="modal" data-target="#modal-loadLot">
                    <span class="text">Load Lot File</span>
                </button>
            </div>
            <!-- 啟動按鈕 -->
            <div class="col-3 input-group mt-1">
                <button class="btn btn-primary w-50" type="button" onclick="onClickStart()">
                    <span class="text">Start</span>
                </button>
            </div>
        </div>
    </form>
</div>

<!-- 載入中指示器 -->
<div class="spinner" id="spinner">
    <div class="center-div">
        <div class="inner-div d-flex justify-content-center">
            <div class="loader"></div>
        </div>
    </div>
</div>

<!-- 功能視圖區域 -->
<!-- HW bin list 視圖 -->
<div id="HW_bin_list_view" style="margin-top: 230px">
    @Html.Partial("FunctionPart/HwBinListTable")
</div>
<!-- 直方圖結合視圖 -->
<div id="Histogram_combine_view" style="margin-top:230px">
    @Html.Partial("FunctionPart/Histogram_combine")
</div>
<!-- HW失敗PPM視圖 -->
<div id="HW_fail_ppm_view" style="height: 800px; margin-top: 230px">
    HW FAIL PPM view
</div>

<!-- 批次檔案匯入對話框 -->
<div class="modal fade" id="modal-loadLot">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title text-dark">輸入批號</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="mb-3">
                    <label for="InputLotTextarea" class="form-label text-dark">Input Lot:</label>
                    <textarea class="form-control" id="InputLotTextarea" rows="6"
                              placeholder="21NFQAB007&#10;21NFQAB006&#10;21NFQAB005&#10;..."></textarea>
                </div>
            </div>
            <div class="modal-footer justify-content-between">
                <button id="inputModalClose" type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button id="inputModalSave" type="button" class="btn btn-primary">Save</button>
            </div>
        </div>
    </div>
</div>

<!-- 訊息提示對話框 -->
<div class="portfolio-modal modal fade" id="msgModal" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">訊息</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body align-self-center">
                <h4 id="modalMsg">請選擇 'Test Item'</h4>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">確定</button>
            </div>
        </div>
    </div>
</div>

<!-- 載入必要的樣式和腳本 -->
@Styles.Render("~/vendor/flatpickr/flatpickr.min.css")
@Scripts.Render("~/vendor/flatpickr/flatpickr.js")

<script>
    /**
     * 全域狀態變數
     */
    // 儲存各個選擇器的選定值
    let selectedBDValues = [];     // 已選擇的BD值
    let selectedTesterValues = []; // 已選擇的測試機
    let selectedLotValues = [];    // 已選擇的批次ID
    let selectedFunction = "";     // 當前選擇的功能
    let loadLots = [];             // 從檔案載入的批次清單

    /**
     * 顯示/隱藏載入指示器
     * param {boolean} show - true表示顯示載入指示器，false表示隱藏
     */
    function showSpinner(show) {
        document.getElementById('spinner').classList.toggle('active', show);
    }

    /**
     * 頁面載入完成後初始化
     */
    window.addEventListener('DOMContentLoaded', () => {
        // 顯示載入指示器
        showSpinner(true);

        // 獲取使用者資訊並顯示
        const userAccount = getCookie("userAccount");
        if (userAccount) $("#topnav_right_userid").html('Hi ' + userAccount.split(",")[0]);

        // 嘗試獲取API數據
        TryToGetAPIData();

        // 初始化日期選擇器
        flatpickr(["#input_StartDate", "#input_EndDate"], {
            enableTime: true,            // 啟用時間選擇
            dateFormat: "Y-m-d H:i:S",   // 設定日期格式
            time_24hr: true,             // 使用24小時制
            enableSeconds: true,         // 啟用秒選擇
            seconds: true                // 顯示秒
        });

        // 綁定批次檔案匯入按鈕事件
        document.getElementById('inputModalSave').addEventListener('click', saveLotModal);

        // 當關閉批次輸入對話框時清空文字區域
        $('#modal-loadLot').on('hidden.bs.modal', () => $('#InputLotTextarea').val(''));
    });

    /**
     * 儲存批次模態視窗中的資料
     */
    function saveLotModal() {
        showSpinner(true);
        // 處理輸入的批次號碼：分割、去除空格、過濾空值
        loadLots = $('#InputLotTextarea').val().split('\n').map(x => x.trim()).filter(x => x);
        // 關閉模態視窗
        $('#inputModalClose').click();
        // 處理批次檔案
        onSaveLoadLotFile();
    }

    /**
     * 處理已載入的批次檔案並更新相關選擇器
     */
    function onSaveLoadLotFile() {
        // 更新批次選擇器並選中所有項目
        updateSelect("select_Lot", loadLots, true);
        $('#select_Lot').multiselect('rebuild');

        // 清除日期範圍
        $('#input_StartDate,#input_EndDate').val('');

        // 清除BD和Tester選擇
        $('#select_BD,#select_Tester').val('');
        selectedBDValues = [];
        selectedTesterValues = [];

        // 獲取已選擇的批次值
        selectedLotValues = $('#select_Lot').val();

        // 更新相關選擇器數據
        GetTester();
        GetBD();
        GetWaferId();
        GetTestMode();
        GetTestItem();

        showSpinner(false);
    }

    /**
     * 功能選擇改變時的處理
     */
    function onChangeFunction() {
        // 更新當前選擇的功能
        selectedFunction = $('#select_Function').val();

        // 根據功能顯示/隱藏相應視圖
        $('#Histogram_combine_view').toggle(selectedFunction === "histogram");
        $('#HW_bin_list_view').toggle(selectedFunction === "hw_bin_list");
        $('#HW_fail_ppm_view').toggle(selectedFunction === "HW FAIL PPM");

        // 初始化多選選擇器
        initializeMultiselect();

        // 觸發日期和批次ID變更事件
        onChangeDate();
        onChangeLotId();
    }

    /**
     * 日期變更時的處理
     */
    function onChangeDate() {
        showSpinner(true);
        // 根據新的日期範圍重新獲取資料
        GetBD(); GetTester(); GetLotId(); GetWaferId();
    }

    /**
     * BD選擇變更時的處理
     */
    function onChangeBD() {
        showSpinner(true);
        // 更新選擇的值
        selectedBDValues = $('#select_BD').val() || [];
        selectedTesterValues = $('#select_Tester').val() || [];
        selectedLotValues = $('#select_Lot').val() || [];

        // 重新獲取相關資料
        GetTester(); GetLotId(); GetWaferId(); GetTestMode();

        // 對於非HW bin list功能，還需獲取測試項目
        if (selectedFunction !== "hw_bin_list") GetTestItem();
    }

    /**
     * 測試機選擇變更時的處理
     */
    function onChangeTester() {
        showSpinner(true);
        let newVal = $('#select_Tester').val() || [];

        // 檢查值是否真的變更，避免不必要的API呼叫
        if (!arraysAreEqual(selectedTesterValues, newVal)) {
            selectedTesterValues = newVal;
            // 重新獲取相關資料
            GetLotId(); GetBD(); GetWaferId(); GetTestMode();
            if (selectedFunction !== "hw_bin_list") GetTestItem();
        } else {
            showSpinner(false);
        }
    }

    /**
     * 批次ID選擇變更時的處理
     */
    function onChangeLotId() {
        showSpinner(true);
        let newVal = $('#select_Lot').val() || [];

        // 檢查值是否真的變更，避免不必要的API呼叫
        if (!arraysAreEqual(selectedLotValues, newVal)) {
            selectedLotValues = newVal;
            // 重新獲取相關資料
            GetTester(); GetBD(); GetWaferId(); GetTestMode();
            if (selectedFunction !== "hw_bin_list") GetTestItem();
        } else {
            showSpinner(false);
        }
    }

    /**
     * 初始化多選選擇器組件
     * 根據功能類型配置不同的選擇器行為
     */
    function initializeMultiselect() {
        const func = $('#select_Function').val();

        // 處理BD選擇器
        $('#select_BD').multiselect('destroy');
        if (func === 'histogram') {
            // 直方圖模式下BD為單選
            $('#select_BD').removeAttr('multiple').multiselect({
                enableFiltering: true,
                onDropdownHide: onChangeBD
            });
            // 顯示測試項目選擇器並設為單選
            $('#select_Test_item_div').show();
            $('#select_Test_item').multiselect('destroy')
                .removeAttr('multiple')
                .multiselect({ enableFiltering: true });
        } else {
            // 其他模式下BD為多選
            $('#select_BD').attr('multiple', 'multiple').multiselect({
                enableFiltering: true,
                includeSelectAllOption: true,
                onDropdownHide: onChangeBD
            });

            // hw_bin_list模式下隱藏測試項目
            if (func === 'hw_bin_list') {
                $('#select_Test_item_div').hide();
            } else {
                // 其他模式下顯示測試項目並設為多選
                $('#select_Test_item_div').show();
                $('#select_Test_item').multiselect('destroy')
                    .attr('multiple', 'multiple')
                    .multiselect({
                        enableFiltering: true,
                        includeSelectAllOption: true
                    });
            }
        }

        // 初始化其他選擇器
        ['Tester', 'Lot', 'Wafer', 'Test_mode', 'Site'].forEach(id => {
            $('#select_' + id).multiselect('destroy').multiselect({
                enableFiltering: true,
                includeSelectAllOption: true
            });
        });
    }

    /**
     * 更新選擇器的選項
     * param {string} objID - 選擇器ID
     * param {Array} optionsArray - 選項數組
     * param {boolean} selectAll - 是否全選
     */
    function updateSelect(objID, optionsArray, selectAll = false) {
        // 獲取選擇器並清空內容
        const $sel = $('#' + objID).empty();

        // 根據不同的選擇器類型處理已選擇的項目
        if (objID === 'select_BD' && selectedBDValues.length) {
            // 處理BD選擇器的已選項
            optionsArray.forEach(opt => $sel.append(
                `<option value="${opt}"${selectedBDValues.includes(opt) ? ' selected' : ''}>${opt}</option>`
            ));
        } else if (objID === 'select_Tester' && selectedTesterValues.length) {
            // 處理測試機選擇器的已選項
            optionsArray.forEach(opt => $sel.append(
                `<option value="${opt}"${selectedTesterValues.includes(opt) ? ' selected' : ''}>${opt}</option>`
            ));
        } else if (objID === 'select_Lot' && selectedLotValues.length) {
            // 處理批次ID選擇器的已選項
            optionsArray.forEach(opt => $sel.append(
                `<option value="${opt}"${selectedLotValues.includes(opt) ? ' selected' : ''}>${opt}</option>`
            ));
        } else {
            // 其他選擇器的處理
            optionsArray.forEach(opt => $sel.append(`<option value="${opt}">${opt}</option>`));
        }

        // 如果需要全選，則設置所有選項為選中狀態
        if (selectAll) $sel.find('option').prop('selected', true);
    }

    /**
     * 比較兩個數組是否相等
     * param {Array} a - 第一個數組
     * param {Array} b - 第二個數組
     * returns {boolean} - 如果相等返回true，否則返回false
     */
    function arraysAreEqual(a, b) {
        if (!a || !b) return false;
        if (a.length !== b.length) return false;
        return a.every((v, i) => v === b[i]);
    }

    /**
     * 嘗試獲取API數據，用於初始化頁面
     */
    function TryToGetAPIData() {
        const postData = getPostData();
        $.post("/MongoAPI/GetBD", postData, function (response) {
            if (response === "Unauthorized") {
                alert('Web API Unauthorized. 請重新整理或聯絡工程師');
                // 如果未授權，重試
                TryToGetAPIData();
            } else {
                // 成功獲取數據後初始化頁面
                pageInit();
            }
        }).fail(() => showSpinner(false));
    }

    /**
     * 獲取要發送到API的POST數據
     * returns {Object} - 準備發送的數據對象
     */
    function getPostData() {
        // 獲取日期值並轉換為Date對象
        const start = new Date($('#input_StartDate').val());
        const end = new Date($('#input_EndDate').val());

        // 返回所有查詢參數
        return {
            pageName: $('#select_Function').val(),    // 功能名稱
            startDate: formatDate(start),             // 開始日期
            endDate: formatDate(end),                 // 結束日期
            bd: $('#select_BD').val(),                // BD值
            tester: $('#select_Tester').val(),        // 測試機
            lotId: $('#select_Lot').val(),            // 批次ID
            waferId: $('#select_Wafer').val(),        // 晶圓ID
            testMode: $('#select_Test_mode').val(),   // 測試模式
            testItem: $('#select_Test_item').val(),   // 測試項目
            site: $('#select_Site').val()             // 站點
        };
    }

    /**
     * 獲取BD數據並更新BD選擇器
     */
    function GetBD() {
        $.post("/MongoAPI/GetBD", getPostData(), function (res) {
            updateSelect("select_BD", res);
            $('#select_BD').multiselect('rebuild');
            showSpinner(false);
        }).fail(() => showSpinner(false));
    }

    /**
     * 獲取測試機數據並更新選擇器
     */
    function GetTester() {
        $.post("/MongoAPI/GetTester", getPostData(), function (res) {
            updateSelect("select_Tester", res);
            $('#select_Tester').multiselect('rebuild');
            showSpinner(false);
        }).fail(() => showSpinner(false));
    }

    /**
     * 獲取批次ID數據並更新選擇器
     */
    function GetLotId() {
        $.post("/MongoAPI/GetLotId", getPostData(), function (res) {
            updateSelect("select_Lot", res);
            $('#select_Lot').multiselect('rebuild');
            showSpinner(false);
        }).fail(() => showSpinner(false));
    }

    /**
     * 獲取晶圓ID數據並更新選擇器
     */
    function GetWaferId() {
        $.post("/MongoAPI/GetWaferId", getPostData(), function (res) {
            updateSelect("select_Wafer", res);
            $('#select_Wafer').multiselect('rebuild');
            showSpinner(false);
        }).fail(() => showSpinner(false));
    }

    /**
     * 獲取測試模式數據並更新選擇器
     */
    function GetTestMode() {
        $.post("/MongoAPI/GetTestMode", getPostData(), function (res) {
            updateSelect("select_Test_mode", res);
            $('#select_Test_mode').multiselect('rebuild');
            showSpinner(false);
        }).fail(() => showSpinner(false));
    }

    /**
     * 獲取測試項目數據並更新選擇器
     */
    function GetTestItem() {
        $.post("/MongoAPI/GetTestItem", getPostData(), function (res) {
            updateSelect("select_Test_item", res);
            $('#select_Test_item').multiselect('rebuild');
            showSpinner(false);
        }).fail(() => showSpinner(false));
    }

    /**
     * 頁面初始化
     * 設置多選選擇器並觸發功能變更事件
     */
    function pageInit() {
        initializeMultiselect();
        onChangeFunction();
        // 若有需要，可在此添加圖表初始化代碼
        // barChartInit();
    }

    /**
     * 格式化日期為字符串
     * param {Date} date - 要格式化的日期對象
     * returns {string} - 格式化後的日期字符串 (YYYY-MM-DD HH:MM:SS)
     */
    function formatDate(date) {
        if (!date) return '';
        // 拼接日期字符串，確保月、日、時、分、秒為兩位數
        return date.getFullYear() + '-' +
            ('0' + (date.getMonth() + 1)).slice(-2) + '-' +
            ('0' + date.getDate()).slice(-2) + ' ' +
            ('0' + date.getHours()).slice(-2) + ':' +
            ('0' + date.getMinutes()).slice(-2) + ':' +
            ('0' + date.getSeconds()).slice(-2);
    }
</script>